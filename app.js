const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
//–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
const API_KEY_BOT = '6434531598:AAGjW4a3X9GrG7R7oQiWnZphx9g4GyM4m_s';
const OpenAI = require('openai');
const openai = new OpenAI({ apiKey: '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' });
const bot = new TelegramBot(API_KEY_BOT, {

    polling: true
    
});
//–ú–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –¥–ª—è –º–µ–Ω—é –∫–æ–º–∞–Ω–¥

//–ú–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –¥–ª—è –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
const commands = [

    {command: "start", description: "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"},
    {command: "help", description: "–†–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏"},
    {command: "link", description: "–°—Å—ã–ª–∫–∞"},
    {command: "menu", description: "–ú–µ–Ω—é-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"},

]

//–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
bot.setMyCommands(commands);

//–°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.on('text', async msg => {

    try {

        //–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        if(msg.text.startsWith('/start')) {
            
            //–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.sendMessage(msg.chat.id, `kuromi1kow for russian final , –í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞! üëãüèª
`);

            //–ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∑–∞–ø—É—â–µ–Ω –±–æ—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ /ref
            if(msg.text.length > 6) {
                //–ü–æ–ª—É—á–∞–µ–º ID –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
                const refID = msg.text.slice(7);
                //–ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –∑–∞—à—ë–ª –ø–æ ref-—Å—Å—ã–ª–∫–µ, —Ç–æ –µ–º—É –ø—Ä–∏–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —ç—Ç–æ–º
                await bot.sendMessage(msg.chat.id, `–í—ã –∑–∞—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${refID}`);

            }

        }
      
        else if(msg.text == '/help') {

            //–ü—Ä–∏–º–µ—Ä HTML-—Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
            await bot.sendMessage(msg.chat.id, `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –º–µ–Ω—è: –Ø —Å–æ–∑–¥–∞—é –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ –≤–∞—à–µ–º—É —Ç–µ–∫—Å—Ç—É. –¢–µ–º —Å–∞–º—ã–º —è –ª—É—á—à–∏–π –Ω–∞ —Å–≤–µ—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –°–ú–ò`, {

                parse_mode: "HTML"

            });

           
        }
        else if(msg.text == '/link') {

            await bot.sendMessage(msg.chat.id, `https://github.com/kuromi1kow`, {

                //–í—ã–∫–ª—é—á–∞–µ–º –ø—Ä–µ–≤—å—é —Å—Å—ã–ª–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                disable_web_page_preview: true,
                //–û—Ç–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                disable_notification: true

            });

        }
        else if(msg.text == '/menu') {

            await bot.sendMessage(msg.chat.id, `–ú–µ–Ω—é –±–æ—Ç–∞`, {

                reply_markup: {
                    //–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    keyboard: [

                        [ '‚≠êÔ∏è –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –°–ú–ò'],
                        [{text: '‚≠êÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç', request_contact: true}, {text: '‚≠êÔ∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è', request_location: true}],
                        ['‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é']

                    ],
                    //–ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –º–µ–Ω—é-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                    resize_keyboard: true

                }

            })

        }
      
        else if(msg.text == '‚≠êÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞') {

            //–°–∫–∏–¥—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Å—ã–ª–∫–æ–π
            //await bot.sendPhoto(msg.chat.id, process.env.URL_TO_IMG);

            //–°–∫–∏–¥—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∫–∞–∑–∞–≤ –ø—É—Ç—å
            //await bot.sendPhoto(msg.chat.id, './image.jpg');

            //–°–∫–∏–¥—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é Readable Stream
            const imageStream = fs.createReadStream('./image');
            await bot.sendPhoto(msg.chat.id, imageStream, {

                caption: '<b>‚≠êÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞</b>',
                parse_mode: 'HTML'

            });
            const imageBuffer = fs.readFileSync('./image.jpg');
            await bot.sendPhoto(msg.chat.id, imageBuffer);

        }
    
        else if(msg.text == '‚≠êÔ∏è –ê—É–¥–∏–æ') {

            //–°–∫–∏–¥—ã–≤–∞–µ–º –∞—É–¥–∏–æ
            await bot.sendAudio(msg.chat.id, './audio.mp3', {

                caption: '<b>‚≠êÔ∏è –ê—É–¥–∏–æ</b>',
                parse_mode: 'HTML'

            });

        }
        else if(msg.text == '‚≠êÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ') {

            //–°–∫–∏–¥—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.sendVoice(msg.chat.id, './audio.mp3', {

                caption: '<b>‚≠êÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>',
                parse_mode: 'HTML'

            });

        }
        else if(msg.text == '‚≠êÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç') {

            //–°–∫–∏–¥—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
            await bot.sendContact(msg.chat.id, process.env.CONTACT, `–ö–æ–Ω—Ç–∞–∫—Ç`, {

                reply_to_message_id: msg.message_id

            });

        }
        else if(msg.text == '‚≠êÔ∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è') {

            //–û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É –Ω—É–∂–Ω–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            const latitudeOfRedSquare = 55.753700;
            const longitudeOfReadSquare = 37.621250;
            //–°–∫–∏–¥—ã–≤–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –Ω—É–∂–Ω–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
            await bot.sendLocation(msg.chat.id, latitudeOfRedSquare, longitudeOfReadSquare, {

                reply_to_message_id: msg.message_id

            })

        }
        else if(msg.text == '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é') {

            await bot.sendMessage(msg.chat.id, '–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ', {

                reply_markup: {
                    //–í—ã–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    remove_keyboard: true

                }

            })

        }
        else {

          try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç –±–æ—Ç–∞ –ª–∏ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (msg.from.id !== bot.me.id) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ
        const msgWait = await bot.sendMessage(msg.chat.id, `–ë–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç...`);

        // –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç—É–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç—Ö–æ-–±–æ—Ç)
        setTimeout(async () => {
            await bot.editMessageText(msg.text, {
                chat_id: msgWait.chat.id,
                message_id: msgWait.message_id
            });
        }, 5000);
    }
} catch (error) {
    console.log(error);
}

        }

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('photo', async img => {

    try {
        //–ú–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ç–∞—â–∏–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–∞—Ä—Ç–∏–Ω–æ–∫
        const photoGroup = [];
        //–ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–∞—Ä—Ç–∏–Ω–æ–∫ (—Å–∂–∞—Ç—ã–µ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª) –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö –≤ –º–∞—Å—Å–∏–≤
        for(let index = 0; index < img.photo.length; index++) {
            //–°–∫–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
            const photoPath = await bot.downloadFile(img.photo[index].file_id, './image');
            //–î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—Ç–∏–Ω–∫–µ –≤ –º–∞—Å—Å–∏–≤ –∏—Å–ø–æ–ª—å–∑—É—è –ø—É—Ç—å –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –∏–∑ img
            photoGroup.push({

                type: 'photo',
                media: photoPath,
                caption: `–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${img.photo[index].file_size} –±–∞–π—Ç\n–®–∏—Ä–∏–Ω–∞: ${img.photo[index].width}\n–í—ã—Å–æ—Ç–∞: ${img.photo[index].height}`

            })

        }
        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–∞—Ä—Ç–∏–Ω–æ–∫
        await bot.sendMediaGroup(img.chat.id, photoGroup);
        //–ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–∞—á–∞–ª–∏
        for(let index = 0; index < photoGroup.length; index++) {

            fs.unlink(photoGroup[index].media, error => {

                if(error) {

                    console.log(error);

                }

            })

        }

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∏–¥–µ–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on("video", async video => {

    try {
        //–°–∫–∞—á–∏–≤–∞–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—É –≤–∏–¥–µ–æ
        const thumbPath = await bot.downloadFile(video.video.thumbnail.file_id, './image');
        //–°–∫–∏–¥—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∏–¥–µ–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω—ë–º –∏ –º–∏–Ω–∏–∞—Ç—é—Ä—É
        await bot.sendMediaGroup(video.chat.id, [
            
            {

                type: 'video',
                media: video.video.file_id,
                caption: `–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: ${video.video.file_name}\n–í–µ—Å —Ñ–∞–π–ª–∞: ${video.video.file_size} –±–∞–π—Ç\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ: ${video.video.duration} —Å–µ–∫—É–Ω–¥\n–®–∏—Ä–∏–Ω–∞ –∫–∞–¥—Ä–∞ –≤ –≤–∏–¥–µ–æ: ${video.video.width}\n–í—ã—Å–æ—Ç–∞ –∫–∞–¥—Ä–∞ –≤ –≤–∏–¥–µ–æ: ${video.video.height}`

            },
            {

                type: 'photo',
                media: thumbPath,

            }

        ]);
        //–£–¥–∞–ª—è–µ–º –º–∏–Ω–∏–∞—Ç—é—Ä—É
        fs.unlink(thumbPath, error => {

            if(error) {

                console.log(error);

            }

        })

    }
    catch(error) {

        console.log(error);

    }

})

bot.on('text', async (msg) => {
    try {
        // ... (–≤–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥)

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–¥–µ–ª–∏ OpenAI GPT-3.5 Turbo
        if (msg.text == '‚≠êÔ∏è –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –°–ú–ò') {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
            await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞:');

            // –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            bot.once('text', async (userInput) => {
                // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI
                const response = await sendMessage(userInput.text);

                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤ —á–∞—Ç Telegram
                await bot.sendMessage(msg.chat.id, response);
            });
        }

    } catch (error) {
        console.error(error);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ OpenAI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
const sendMessage = async (text) => {
    try {
        const stream = await openai.chat.completions.create({
            model: 'gpt-4-0125-preview',
            messages: [{ role: 'user', content: text }],
            stream: true
        });

        let answer = '';
        for await (const chunk of stream) {
            answer += chunk.choices[0]?.delta?.content || '';
        }

        return answer.trim(); // –£–±—Ä–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    } catch (error) {
        console.error(error);
        return '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞.';
    }
};

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞—É–¥–∏–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('audio', async audio => {

    try {   
        //–°–∫–∏–¥—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞—É–¥–∏–æ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—É–¥–∏–æ
        await bot.sendAudio(audio.chat.id, audio.audio.file_id, {

            caption: `–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: ${audio.audio.file_name}\n–í–µ—Å —Ñ–∞–π–ª–∞: ${audio.audio.file_size} –±–∞–π—Ç\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ: ${audio.audio.duration} —Å–µ–∫—É–Ω–¥`

        })

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('voice', async voice => {

    try {
        //–°–∫–∏–¥—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—É–¥–∏–æ-—Ñ–∞–π–ª–æ–º –∏ –ø–∏—à–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º
        await bot.sendAudio(voice.chat.id, voice.voice.file_id, {

            caption: `–í–µ—Å —Ñ–∞–π–ª–∞: ${voice.voice.file_size} –±–∞–π—Ç\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ: ${voice.voice.duration} —Å–µ–∫—É–Ω–¥`

        })

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('contact', async contact => {

    try {
        //–°–∫–∏–¥—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
        await bot.sendMessage(contact.chat.id, `–ù–æ–º–µ—Ä –∫–æ–Ω—Ç–∞–∫—Ç–∞: ${contact.contact.phone_number}\n–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞: ${contact.contact.first_name}`);

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('location', async location => {

    try {
        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –æ–Ω –Ω–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª
        await bot.sendMessage(location.chat.id, `–®–∏—Ä–æ—Ç–∞: ${location.location.latitude}\n–î–æ–ª–≥–æ—Ç–∞: ${location.location.longitude}`);

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∏–∫–µ—Ä–æ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('sticker', async sticker => {

    try {

        //–°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª —Å—Ç–∏–∫–µ—Ä–∞
        const stickerPath = await bot.downloadFile(sticker.sticker.file_id, './image');
        //–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å—Ç–∏–∫–µ—Ä–∞ —Å–∫–∏–¥—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–∞–π–ª —Å –Ω–∏–º (–≤–∏–¥–µ–æ, –∞–Ω–∏–º–∞—Ü–∏—è –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞)
        if(sticker.sticker.is_video) {

            await bot.sendVideo(sticker.chat.id, stickerPath);

        }
        else if(sticker.sticker.is_animated) {

            await bot.sendAnimation(sticker.chat.id, sticker.sticker.file_id);

        }
        else {

            await bot.sendPhoto(sticker.chat.id, stickerPath);

        }
        //–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å—Ç–∏–∫–µ—Ä–∞
        fs.unlink(stickerPath, error => {

            if(error) {

                console.log(error);

            }

        })

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–ª–±–µ–∫–∏ –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
bot.on('callback_query', async ctx => {

    try {

        switch(ctx.data) {
            //–ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—ã–ª–æ –≤—ã–∑–≤–∞–Ω–æ –º–µ–Ω—é
            case "closeMenu":

                await bot.deleteMessage(ctx.message.chat.id, ctx.message.message_id);
                await bot.deleteMessage(ctx.message.reply_to_message.chat.id, ctx.message.reply_to_message.message_id);
                break;
            //–ö–Ω–æ–ø–∫–æ–π —Å—Ç–∏–∫–µ—Ä–∞ —Å–∫–∏–¥—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–∞—Ä—Ç–∏–Ω–∫—É —Å—Ç–∏–∫–µ—Ä–æ–º
            case "sticker":

                await bot.sendSticker(ctx.message.chat.id, `./image.jpg`);
                break;
            //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—Ä—É–≥–ª–æ–µ –≤–∏–¥–µ–æ
            case "circleVideo":

                await bot.sendVideoNote(ctx.message.chat.id, './video.mp4', {

                    protect_content: true

                });
                break;
            //–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ –æ—Ç–≤–µ—á–∞–µ–º –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞
            case "checkSubs":

                const subscribe = await bot.getChatMember(process.env.ID_CHAT, ctx.from.id);

                if(subscribe.status == 'left' || subscribe.status == 'kicked') {

                    await bot.sendMessage(ctx.message.chat.id, `<b>–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º!</b>`, {

                        parse_mode: 'HTML'

                    })

                }
                else {

                    await bot.sendMessage(ctx.message.chat.id, '<b>–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º!</b>', {

                        parse_mode: 'HTML'

                    })

                }

                break;
            //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É
            case "buyFile":

                await bot.sendInvoice(ctx.message.chat.id, 
                                    '–ö—É–ø–∏—Ç—å –§–∞–π–ª', //–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—á–µ—Ç–∞
                                    '–ü–æ–∫—É–ø–∫–∞ —Ñ–∞–π–ª–∞', //–û–ø–∏—Å–∞–Ω–∏–µ —Å—á–µ—Ç–∞
                                    'file', //Payload - –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
                                    process.env.PROVIDER_TOKEN, //–ü—Ä–æ–≤–∞–π–¥–µ—Ä-—Ç–æ–∫–µ–Ω –æ—Ç –ø–ª–∞—Ç–µ–∂–∫–∏
                                    'RUB', //–ö–æ–¥ –≤–∞–ª—é—Ç—ã
                                    [{

                                        label: '–§–∞–π–ª', //–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
                                        amount: 20000 //–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ (–≤ –∫–æ–ø–µ–π–∫–∞—Ö!!!)
                                    
                                    }]);

                break;

        }

    }
    catch(error) {

        console.log(error);

    }

})

//–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ —Å—á–µ—Ç—É –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ
bot.on('pre_checkout_query', async ctx => {

    try {

        await bot.answerPreCheckoutQuery(ctx.id, true);

    }
    catch(error) {

        console.log(error);

    }

})

//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–¥–∞—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on('successful_payment', async ctx => {

    try {
        //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–∫—É–º–µ–Ω—Ç –∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç payload –∏–∑ –ø–ª–∞—Ç–µ–∂–∞
        await bot.sendDocument(ctx.chat.id, `./${ctx.successful_payment.invoice_payload}.txt`, {

            caption: `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É ${ctx.successful_payment.invoice_payload}!`

        })

    }
    catch(error) {

        console.log(error);

    }

})

//–õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ polling'a
bot.on("polling_error", err => console.log(err.data.error.message));